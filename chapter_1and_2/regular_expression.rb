# 正则表达式  regular expression
# 功能：
# ●  将字符串与模式(pattern)相匹配
# ●  使用模式分割字符串

# 判断字符串是否适用于某模式的过程称为匹配，如果字符串适用于该模式则称为匹配成功。

# 创建正则表达式对象的语法：  / 模式 /

# 把希望匹配的内容直接写出来，就这么简单。匹配字母、数字时，按字符串原样写就可以了。（汉字也可以用同样的方法匹配）
# 我们用运算符 =~ 来匹配正则表达式和字符串。它与判断是否为同一个对象时用到的 == 有点像。

# 匹配正则表达式与字符串的方法是:   /模式/ =~ 希望匹配的字符串
# 当模式中只使用英文、数字、汉字时，若希望匹配的字符串中包含模式中的字符串，则视为
# 匹配成功，不包含则视为匹配失败。若匹配成功则返回匹配部分的位置。字符的位置和数组的索 引一样，是从 0 开始计数的。
# 也就是说，字符串的首个字符位置为 0。反之，若匹配失败，则返 回 nil。

puts /Ruby/ =~ "Yet Another Ruby Hacker,"
puts /Ruby/ =~ "Diamond", "null"

# 正则表达式右边的 / 后面加上 i 表示不区分大小写匹配。
puts /Ruby/ =~ "ruby", "null"
puts /Ruby/i =~ "ruby"

